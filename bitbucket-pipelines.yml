# This is a sample build configuration for Docker.
# Check our guides at https://confluence.atlassian.com/x/O1toN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: 'atlassian/default-image:2'


pipelines:
  branches:
    develop:
      - step:
          name: "Build"
          services:
            - docker
          caches:
            - docker
          script:
            - echo "Starting build"
            # confirm docker build
            - cd CORE-API/
            - docker build .

            - ESCAPED_BRANCH_REPLACE=$(printf '%s\n' "$BITBUCKET_BRANCH" | sed -e 's/[\/&]/\\&/g')

            # Set Commit Hash for health checks and get version for sentry
            - sed -i "s/local/$BITBUCKET_COMMIT/g" appsettings.json
            - sed -i "s/git\-branch\-name/$ESCAPED_BRANCH_REPLACE/g" appsettings.json
            - sed -i "s/pipeline\-number/$BITBUCKET_BUILD_NUMBER/g" appsettings.json
            - export VERSION=$(grep "Version" appsettings.json  | sed "s/.*\"Version\"":" \"\(.*\)\".*/\1/")
            - sed -i "s/sentry_version/$VERSION/g" appsettings.json

            # Notify Sentry of new build version
            - curl -sL https://sentry.io/get-cli/ | bash 
            - sentry-cli releases new -p $SENTRY_PROJECT $VERSION
            - sentry-cli releases set-commits --auto $VERSION --ignore-missing --ignore-empty

            #Package up the zip file
            - apt-get install zip
            - zipname="core-api.zip"
            - zip -r $zipname .
            - cd ../
            - mv "CORE-API/core-api.zip" .
          artifacts:
            - core-api.zip
      - step:
          name: "Upload Build to AWS"
          script:
            #Upload to Elastic Beanstalk
            - pipe: atlassian/aws-elasticbeanstalk-deploy:0.2.3
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                APPLICATION_NAME: $APPLICATION_NAME
                COMMAND: 'upload-only'
                ZIP_FILE: 'core-api.zip'
                S3_BUCKET: $S3_BUCKET
                VERSION_LABEL: '${APPLICATION_NAME}-${BITBUCKET_BUILD_NUMBER}-${BITBUCKET_COMMIT:0:8}-${BITBUCKET_BRANCH}'
                DESCRIPTION: 'Build ${BITBUCKET_BUILD_NUMBER} - ${VERSION}'
      - step:
          name: "Deploy to Dev"
          deployment: Dev
          trigger: manual
          script:
          - echo "Deployment to Dev"
          - pipe: atlassian/aws-elasticbeanstalk-deploy:0.2.3
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
              APPLICATION_NAME: $APPLICATION_NAME
              COMMAND: 'deploy-only'
              VERSION_LABEL: '${APPLICATION_NAME}-${BITBUCKET_BUILD_NUMBER}-${BITBUCKET_COMMIT:0:8}-${BITBUCKET_BRANCH}'
              ENVIRONMENT_NAME: $DEV_ENVIRONMENT_NAME
              WAIT: 'false'
    release/*:
      - step:
          name: "Build"
          services:
            - docker
          caches:
            - docker
          script:
            - echo "Starting build"
            # confirm docker build
            - cd CORE-API/
            - docker build .

            - ESCAPED_BRANCH_REPLACE=$(printf '%s\n' "$BITBUCKET_BRANCH" | sed -e 's/[\/&]/\\&/g')

            # Set Commit Hash for health checks and get version for sentry
            - sed -i "s/local/$BITBUCKET_COMMIT/g" appsettings.json
            - sed -i "s/git\-branch\-name/$ESCAPED_BRANCH_REPLACE/g" appsettings.json
            - sed -i "s/pipeline\-number/$BITBUCKET_BUILD_NUMBER/g" appsettings.json
            - export VERSION=$(grep "Version" appsettings.json  | sed "s/.*\"Version\"":" \"\(.*\)\".*/\1/")
            - sed -i "s/sentry_version/$VERSION/g" appsettings.json

            # Notify Sentry of new build version
            - curl -sL https://sentry.io/get-cli/ | bash 
            - sentry-cli releases new -p $SENTRY_PROJECT $VERSION
            - sentry-cli releases set-commits --auto $VERSION --ignore-missing --ignore-empty

            #Package up the zip file
            - apt-get install zip
            - zipname="core-api.zip"
            - zip -r $zipname .
            - cd ../
            - mv "CORE-API/core-api.zip" .
          artifacts:
            - core-api.zip
      - step:
          name: "Upload Build to AWS"
          script:
            #Upload to Elastic Beanstalk
            - pipe: atlassian/aws-elasticbeanstalk-deploy:0.2.3
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                APPLICATION_NAME: $APPLICATION_NAME
                COMMAND: 'upload-only'
                ZIP_FILE: 'core-api.zip'
                S3_BUCKET: $S3_BUCKET
                VERSION_LABEL: '${APPLICATION_NAME}-${BITBUCKET_BUILD_NUMBER}-${BITBUCKET_COMMIT:0:8}-${BITBUCKET_BRANCH}'
                DESCRIPTION: 'Build ${BITBUCKET_BUILD_NUMBER} - ${VERSION}'
      - step:
          name: "Deploy to Staging"
          deployment: Staging
          trigger: manual
          script:
          - echo "Deployment to Staging"
          - pipe: atlassian/aws-elasticbeanstalk-deploy:0.2.3
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
              APPLICATION_NAME: $APPLICATION_NAME
              COMMAND: 'deploy-only'
              VERSION_LABEL: '${APPLICATION_NAME}-${BITBUCKET_BUILD_NUMBER}-${BITBUCKET_COMMIT:0:8}-${BITBUCKET_BRANCH}'
              ENVIRONMENT_NAME: $STAGING_ENVIRONMENT_NAME
              WAIT: 'false'
    master:
      - step:
          name: "Build"
          services:
            - docker
          caches:
            - docker
          script:
            - echo "Starting build"
            # confirm docker build
            - cd CORE-API/
            - docker build .

            - ESCAPED_BRANCH_REPLACE=$(printf '%s\n' "$BITBUCKET_BRANCH" | sed -e 's/[\/&]/\\&/g')

            # Set Commit Hash for health checks and get version for sentry
            - sed -i "s/local/$BITBUCKET_COMMIT/g" appsettings.json
            - sed -i "s/git\-branch\-name/$ESCAPED_BRANCH_REPLACE/g" appsettings.json
            - sed -i "s/pipeline\-number/$BITBUCKET_BUILD_NUMBER/g" appsettings.json
            - export VERSION=$(grep "Version" appsettings.json  | sed "s/.*\"Version\"":" \"\(.*\)\".*/\1/")
            - sed -i "s/sentry_version/$VERSION/g" appsettings.json

            # Notify Sentry of new build version
            - curl -sL https://sentry.io/get-cli/ | bash 
            - sentry-cli releases new -p $SENTRY_PROJECT $VERSION
            - sentry-cli releases set-commits --auto $VERSION --ignore-missing --ignore-empty

            #Package up the zip file
            - apt-get install zip
            - zipname="core-api.zip"
            - zip -r $zipname .
            - cd ../
            - mv "CORE-API/core-api.zip" .
          artifacts:
            - core-api.zip
      - step:
          name: "Upload Build to AWS"
          script:
            #Upload to Elastic Beanstalk
            - pipe: atlassian/aws-elasticbeanstalk-deploy:0.2.3
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                APPLICATION_NAME: $APPLICATION_NAME
                COMMAND: 'upload-only'
                ZIP_FILE: 'core-api.zip'
                S3_BUCKET: $S3_BUCKET
                VERSION_LABEL: '${APPLICATION_NAME}-${BITBUCKET_BUILD_NUMBER}-${BITBUCKET_COMMIT:0:8}-${BITBUCKET_BRANCH}'
                DESCRIPTION: 'Build ${BITBUCKET_BUILD_NUMBER} - ${VERSION}'
      - step:
          name: "Deploy to Production"
          deployment: Production
          trigger: manual
          script:
          - echo "Deployment to Production"
          - pipe: atlassian/aws-elasticbeanstalk-deploy:0.2.3
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
              APPLICATION_NAME: $APPLICATION_NAME
              COMMAND: 'deploy-only'
              VERSION_LABEL: '${APPLICATION_NAME}-${BITBUCKET_BUILD_NUMBER}-${BITBUCKET_COMMIT:0:8}-${BITBUCKET_BRANCH}'
              ENVIRONMENT_NAME: $PRODUCTION_ENVIRONMENT_NAME
              WAIT: 'true'
  pull-requests:
    feature/*:
      - step:
          name: "Build"
          services:
            - docker
          caches:
            - docker
          script:
            - echo "Starting build"
            # confirm docker build
            - cd CORE-API/
            - docker build .

            - ESCAPED_BRANCH_REPLACE=$(printf '%s\n' "$BITBUCKET_BRANCH" | sed -e 's/[\/&]/\\&/g')

            # Set Commit Hash for health checks and get version for sentry
            - sed -i "s/local/$BITBUCKET_COMMIT/g" appsettings.json
            - sed -i "s/git\-branch\-name/$ESCAPED_BRANCH_REPLACE/g" appsettings.json
            - sed -i "s/pipeline\-number/$BITBUCKET_BUILD_NUMBER/g" appsettings.json
            - export VERSION=$(grep "Version" appsettings.json  | sed "s/.*\"Version\"":" \"\(.*\)\".*/\1/")
            - sed -i "s/sentry_version/$VERSION/g" appsettings.json

            # Notify Sentry of new build version
            - curl -sL https://sentry.io/get-cli/ | bash 
            - sentry-cli releases new -p $SENTRY_PROJECT $VERSION
            - sentry-cli releases set-commits --auto $VERSION --ignore-missing --ignore-empty

            #Package up the zip file
            - apt-get install zip
            - zipname="core-api.zip"
            - zip -r $zipname .
            - cd ../
            - mv "CORE-API/core-api.zip" .
          artifacts:
            - core-api.zip
      - step:
          name: "Upload Build to AWS"
          trigger: manual
          script:
            #Upload to Elastic Beanstalk
            - pipe: atlassian/aws-elasticbeanstalk-deploy:0.2.3
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                APPLICATION_NAME: $APPLICATION_NAME
                COMMAND: 'upload-only'
                ZIP_FILE: 'core-api.zip'
                S3_BUCKET: $S3_BUCKET
                VERSION_LABEL: '${APPLICATION_NAME}-${BITBUCKET_BUILD_NUMBER}-${BITBUCKET_COMMIT:0:8}'
                DESCRIPTION: 'Build ${BITBUCKET_BUILD_NUMBER} - ${VERSION}'
      - step:
          name: "Deploy to Dev"
          deployment: Dev
          trigger: manual
          script:
          - echo "Deployment to Dev"
          - pipe: atlassian/aws-elasticbeanstalk-deploy:0.2.3
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
              APPLICATION_NAME: $APPLICATION_NAME
              COMMAND: 'deploy-only'
              VERSION_LABEL: '${APPLICATION_NAME}-${BITBUCKET_BUILD_NUMBER}-${BITBUCKET_COMMIT:0:8}'
              ENVIRONMENT_NAME: $DEV_ENVIRONMENT_NAME
              WAIT: 'false'